//
// Created by liaohy on 8/5/25.
//

#include "dw_base_utils.h"
#include <cstdio>
#include <iostream>

void display_dw_error(Dwarf_Error error) {
    printf("ERROR due to error 0x%lx %s\n",
           static_cast<uint64_t>(dwarf_errno(error)),
           dwarf_errmsg(error));
}


int dw_error_check(int res, Dwarf_Debug dbg, Dwarf_Error err) {
    if (err != nullptr) {
        if (res == DW_DLV_ERROR) {
            display_dw_error(err);
            dwarf_dealloc_error(dbg, err);
        }
    }
    return res;
}

void display_form(Dwarf_Half form) {
    std::cout << "form: " << trans_dw_form(form) << std::endl;
}

void display_op(Dwarf_Half op) {
    std::cout << "opcode: " << trans_dw_form(op) << std::endl;
}


constexpr const char *trans_DW_FORM[] {
    "no form 0",
    "DW_FORM_addr",
    "no form 2",
    "DW_FORM_block2",
    "DW_FORM_block4",
    "DW_FORM_data2",
    "DW_FORM_data4",
    "DW_FORM_data8",
    "DW_FORM_string",
    "DW_FORM_block",
    "DW_FORM_block1",
    "DW_FORM_data1",
    "DW_FORM_flag",
    "DW_FORM_sdata",
    "DW_FORM_strp",
    "DW_FORM_udata",
    "DW_FORM_ref_addr",
    "DW_FORM_ref1",
    "DW_FORM_ref2",
    "DW_FORM_ref4",
    "DW_FORM_ref8",
    "DW_FORM_ref_udata",
    "DW_FORM_indirect",
    "DW_FORM_sec_offset",
    "DW_FORM_exprloc",
    "DW_FORM_flag_present",
    "DW_FORM_strx",
    "DW_FORM_addrx",
    "DW_FORM_ref_sup4",
    "DW_FORM_strp_sup",
    "DW_FORM_data16",
    "DW_FORM_line_strp",
    "DW_FORM_ref_sig8",
    "DW_FORM_implicit_const",
    "DW_FORM_loclistx",
    "DW_FORM_rnglistx",
    "DW_FORM_ref_sup8",
    "DW_FORM_strx1",
    "DW_FORM_strx2",
    "DW_FORM_strx3",
    "DW_FORM_strx4",
    "DW_FORM_addrx1",
    "DW_FORM_addrx2",
    "DW_FORM_addrx3",
    "DW_FORM_addrx4",
};
constexpr const char *trans_DW_OP[]{
    "no op 00",
    "no op 01",
    "no op 02",
    "DW_OP_addr",
    "no op 04",
    "no op 05",
    "DW_OP_deref",
    "no op 07",
    "DW_OP_const1u",
    "DW_OP_const1s",
    "DW_OP_const2u",
    "DW_OP_const2s",
    "DW_OP_const4u",
    "DW_OP_const4s",
    "DW_OP_const8u",
    "DW_OP_const8s",
    "DW_OP_constu",
    "DW_OP_consts",
    "DW_OP_dup",
    "DW_OP_drop",
    "DW_OP_over",
    "DW_OP_pick",
    "DW_OP_swap",
    "DW_OP_rot",
    "DW_OP_xderef",
    "DW_OP_abs",
    "DW_OP_and",
    "DW_OP_div",
    "DW_OP_minus",
    "DW_OP_mod",
    "DW_OP_mul",
    "DW_OP_neg",
    "DW_OP_not",
    "DW_OP_or",
    "DW_OP_plus",
    "DW_OP_plus_uconst",
    "DW_OP_shl",
    "DW_OP_shr",
    "DW_OP_shra",
    "DW_OP_xor",
    "DW_OP_bra",
    "DW_OP_eq",
    "DW_OP_ge",
    "DW_OP_gt",
    "DW_OP_le",
    "DW_OP_lt",
    "DW_OP_ne",
    "DW_OP_skip",
    "DW_OP_lit0",
    "DW_OP_lit1",
    "DW_OP_lit2",
    "DW_OP_lit3",
    "DW_OP_lit4",
    "DW_OP_lit5",
    "DW_OP_lit6",
    "DW_OP_lit7",
    "DW_OP_lit8",
    "DW_OP_lit9",
    "DW_OP_lit10",
    "DW_OP_lit11",
    "DW_OP_lit12",
    "DW_OP_lit13",
    "DW_OP_lit14",
    "DW_OP_lit15",
    "DW_OP_lit16",
    "DW_OP_lit17",
    "DW_OP_lit18",
    "DW_OP_lit19",
    "DW_OP_lit20",
    "DW_OP_lit21",
    "DW_OP_lit22",
    "DW_OP_lit23",
    "DW_OP_lit24",
    "DW_OP_lit25",
    "DW_OP_lit26",
    "DW_OP_lit27",
    "DW_OP_lit28",
    "DW_OP_lit29",
    "DW_OP_lit30",
    "DW_OP_lit31",
    "DW_OP_reg0",
    "DW_OP_reg1",
    "DW_OP_reg2",
    "DW_OP_reg3",
    "DW_OP_reg4",
    "DW_OP_reg5",
    "DW_OP_reg6",
    "DW_OP_reg7",
    "DW_OP_reg8",
    "DW_OP_reg9",
    "DW_OP_reg10",
    "DW_OP_reg11",
    "DW_OP_reg12",
    "DW_OP_reg13",
    "DW_OP_reg14",
    "DW_OP_reg15",
    "DW_OP_reg16",
    "DW_OP_reg17",
    "DW_OP_reg18",
    "DW_OP_reg19",
    "DW_OP_reg20",
    "DW_OP_reg21",
    "DW_OP_reg22",
    "DW_OP_reg23",
    "DW_OP_reg24",
    "DW_OP_reg25",
    "DW_OP_reg26",
    "DW_OP_reg27",
    "DW_OP_reg28",
    "DW_OP_reg29",
    "DW_OP_reg30",
    "DW_OP_reg31",
    "DW_OP_breg0",
    "DW_OP_breg1",
    "DW_OP_breg2",
    "DW_OP_breg3",
    "DW_OP_breg4",
    "DW_OP_breg5",
    "DW_OP_breg6",
    "DW_OP_breg7",
    "DW_OP_breg8",
    "DW_OP_breg9",
    "DW_OP_breg10",
    "DW_OP_breg11",
    "DW_OP_breg12",
    "DW_OP_breg13",
    "DW_OP_breg14",
    "DW_OP_breg15",
    "DW_OP_breg16",
    "DW_OP_breg17",
    "DW_OP_breg18",
    "DW_OP_breg19",
    "DW_OP_breg20",
    "DW_OP_breg21",
    "DW_OP_breg22",
    "DW_OP_breg23",
    "DW_OP_breg24",
    "DW_OP_breg25",
    "DW_OP_breg26",
    "DW_OP_breg27",
    "DW_OP_breg28",
    "DW_OP_breg29",
    "DW_OP_breg30",
    "DW_OP_breg31",
    "DW_OP_regx",
    "DW_OP_fbreg",
    "DW_OP_bregx",
    "DW_OP_piece",
    "DW_OP_deref_size",
    "DW_OP_xderef_size",
    "DW_OP_nop",
    "DW_OP_push_object_address",
    "DW_OP_call2",
    "DW_OP_call4",
    "DW_OP_call_ref",
    "DW_OP_form_tls_address",
    "DW_OP_call_frame_cfa",
    "DW_OP_bit_piece",
    "DW_OP_implicit_value",
    "DW_OP_stack_value",
    "DW_OP_implicit_pointer",
    "DW_OP_addrx",
    "DW_OP_constx",
    "DW_OP_entry_value",
    "DW_OP_const_type",
    "DW_OP_regval_type",
    "DW_OP_deref_type",
    "DW_OP_xderef_type",
    "DW_OP_convert",
    "DW_OP_reinterpret",
    "no op aa",
    "no op ab",
    "no op ac",
    "no op ad",
    "no op ae",
    "no op af",
    "no op b0",
    "no op b1",
    "no op b2",
    "no op b3",
    "no op b4",
    "no op b5",
    "no op b6",
    "no op b7",
    "no op b8",
    "no op b9",
    "no op ba",
    "no op bb",
    "no op bc",
    "no op bd",
    "no op be",
    "no op bf",
    "no op c0",
    "no op c1",
    "no op c2",
    "no op c3",
    "no op c4",
    "no op c5",
    "no op c6",
    "no op c7",
    "no op c8",
    "no op c9",
    "no op ca",
    "no op cb",
    "no op cc",
    "no op cd",
    "no op ce",
    "no op cf",
    "no op d0",
    "no op d1",
    "no op d2",
    "no op d3",
    "no op d4",
    "no op d5",
    "no op d6",
    "no op d7",
    "no op d8",
    "no op d9",
    "no op da",
    "no op db",
    "no op dc",
    "no op dd",
    "no op de",
    "no op df",
    "no op e0",
    "no op e1",
    "no op e2",
    "no op e3",
    "no op e4",
    "no op e5",
    "no op e6",
    "no op e7",
    "no op e8",
    "no op e9",
    "no op ea",
    "no op eb",
    "no op ec",
    "no op ed",
    "no op ee",
};

std::string trans_dw_op(Dwarf_Half op) {
    if (op <= 0xee) {
        return trans_DW_OP[op];
    }
    return "unknown op: " + std::to_string(op);
}


std::string trans_dw_form(Dwarf_Half form) {
    if (form <= 0x2c) {
        return trans_DW_FORM[form];
    }
    return "unknown form: " + std::to_string(form);
}


